/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Transactions,
  TransactionsInterface,
} from "../../Transaction.sol/Transactions";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "account",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyword",
        type: "string",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllTransactions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "account",
            type: "string",
          },
          {
            internalType: "string",
            name: "keyword",
            type: "string",
          },
        ],
        internalType: "struct Transactions.TransferStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "string",
        name: "account",
        type: "string",
      },
      {
        internalType: "string",
        name: "keyword",
        type: "string",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806327506f53146100465780632e7700f014610064578063754091e714610075575b600080fd5b61004e61008a565b60405161005b91906105ba565b60405180910390f35b60005460405190815260200161005b565b610088610083366004610739565b6102d7565b005b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102ce5760008481526020908190206040805160e0810182526007860290920180546001600160a01b0390811684526001820154169383019390935260028301549082015260038201805491929160608401919061010f906107ea565b80601f016020809104026020016040519081016040528092919081815260200182805461013b906107ea565b80156101885780601f1061015d57610100808354040283529160200191610188565b820191906000526020600020905b81548152906001019060200180831161016b57829003601f168201915b50505050508152602001600482015481526020016005820180546101ab906107ea565b80601f01602080910402602001604051908101604052809291908181526020018280546101d7906107ea565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b5050505050815260200160068201805461023d906107ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610269906107ea565b80156102b65780601f1061028b576101008083540402835291602001916102b6565b820191906000526020600020905b81548152906001019060200180831161029957829003601f168201915b505050505081525050815260200190600101906100ae565b50505050905090565b60016000808282546102e99190610824565b90915550506040805160e0810182523381526001600160a01b0387811660208084019182529383018881526060840188815242608086015260a0850188905260c08501879052600180548082018255600091909152855160079091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810180549287166001600160a01b031993841617815594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7820180549190971692169190911790945590517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88401555180519394919361040e937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9019291909101906104d4565b506080820151600482015560a082015180516104349160058401916020909101906104d4565b5060c082015180516104509160068401916020909101906104d4565b5050507f21ec5b3f3e6c597e1a0d1650e5545618667a89bf7d7341cc53e38673d3dede323386868642878760405161048e979695949392919061084a565b60405180910390a16040516001600160a01b0386169085156108fc029086906000818181858888f193505050501580156104cc573d6000803e3d6000fd5b505050505050565b8280546104e0906107ea565b90600052602060002090601f0160209004810192826105025760008555610548565b82601f1061051b57805160ff1916838001178555610548565b82800160010185558215610548579182015b8281111561054857825182559160200191906001019061052d565b50610554929150610558565b5090565b5b808211156105545760008155600101610559565b6000815180845260005b8181101561059357602081850181015186830182015201610577565b818111156105a5576000602083870101525b50601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561068857888303603f19018552815180516001600160a01b039081168552888201511688850152868101518785015260608082015160e082870181905291906106308388018261056d565b92505050608080830151818701525060a08083015186830382880152610656838261056d565b9250505060c08083015192508582038187015250610674818361056d565b9689019694505050908601906001016105e1565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106bd57600080fd5b813567ffffffffffffffff808211156106d8576106d8610696565b604051601f8301601f19908116603f0116810190828211818310171561070057610700610696565b8160405283815286602085880101111561071957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561075157600080fd5b85356001600160a01b038116811461076857600080fd5b945060208601359350604086013567ffffffffffffffff8082111561078c57600080fd5b61079889838a016106ac565b945060608801359150808211156107ae57600080fd5b6107ba89838a016106ac565b935060808801359150808211156107d057600080fd5b506107dd888289016106ac565b9150509295509295909350565b600181811c908216806107fe57607f821691505b60208210810361081e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084557634e487b7160e01b600052601160045260246000fd5b500190565b6001600160a01b038881168252871660208201526040810186905260e06060820181905260009061087d9083018761056d565b85608084015282810360a0840152610895818661056d565b905082810360c08401526108a9818561056d565b9a995050505050505050505056fea26469706673582212208a79927ab99961b3ebbd08cb7bdfd10a9f0c4a31ac1368aa686a9b07789075b064736f6c634300080e0033";

type TransactionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransactionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transactions__factory extends ContractFactory {
  constructor(...args: TransactionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Transactions> {
    return super.deploy(overrides || {}) as Promise<Transactions>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Transactions {
    return super.attach(address) as Transactions;
  }
  override connect(signer: Signer): Transactions__factory {
    return super.connect(signer) as Transactions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransactionsInterface {
    return new utils.Interface(_abi) as TransactionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Transactions {
    return new Contract(address, _abi, signerOrProvider) as Transactions;
  }
}
